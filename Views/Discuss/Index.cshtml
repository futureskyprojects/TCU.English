@model IEnumerable<Discussion>
@{
    ViewData["Title"] = "Discussions";
    string discussCreateRedirectUrl = "";
    if (User.IsInRole(UserType.ROLE_INSTRUCTOR_USER))
        discussCreateRedirectUrl = Url.Action(nameof(InstructorController.YourOwnStudents), NameUtils.ControllerName<InstructorController>());
    else
        discussCreateRedirectUrl = Url.Action(nameof(StudentController.YourOwnInstructor), NameUtils.ControllerName<StudentController>());
}

<div class="card mt-5">
    <div class="card-header">
        <div class="row">
            <div class="col-md-4">
                <h6 class="text-uppercase">YOUR DISCUSSION (@Html.Raw(Model.Count().ToString()))</h6>
                <p class="text-gray mb-md-0">Discuss with other users</p>
            </div>
            <div class="col-md-8">
                @using (Html.BeginForm(nameof(DiscussController.Index), NameUtils.ControllerName<DiscussController>(), FormMethod.Get, new { @class = "form-inline float-md-right" }))
                {
                    <div class="form-group">
                        <label for="inlineFormInputGroup" class="sr-only">Keywords</label>
                        <input id="inlineFormInputGroup" type="text" placeholder="Keywords" class="mr-3 form-control" name="searchKey">
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Search</button>
                        <button type="button" class="btn btn-violet ml-2"
                                onclick="window.location.href='@discussCreateRedirectUrl'">
                            Create
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (Model == null || Model.Count() <= 0)
        {
            <partial name="__EmptyAnimation" />
        }
        else
        {
            @foreach (var discuss in Model)
            {
                User chatMember = discuss.DiscussionUsers.FirstOrDefault().User;
                if (chatMember.Id == User.Id())
                    chatMember = discuss.User;

                <div href="#" class="message card px-5 py-3 mb-4 bg-hover-gradient-primary no-anchor-style">
                    <div class="row">
                        <div class="col-lg-4 d-flex align-items-center flex-column flex-lg-row text-center text-md-left">
                            <img src="@Html.Raw(chatMember.Avatar)" style="max-width: 3rem" class="rounded-circle mr-3 my-2 my-lg-0 top-avatar" onerror="this.onerror=null; this.src='/img/no_avatar.png'">
                            <h6 class="mb-0" style="font-family: Tahoma">@Html.Raw($"{chatMember.FirstName} {chatMember.LastName}")</h6>
                        </div>
                        <div class="col-lg-4 d-flex align-items-center flex-column flex-lg-row text-center text-md-left">
                            <div class="bg-gray-100 roundy px-4 py-1 mr-0 mr-lg-3 mt-2 mt-lg-0 exclode float-lg-left text-info" id="unread-count-@discuss.Id">
                                You have new message(s)!
                            </div>
                        </div>
                        <div class="col-lg-4 d-flex mt-sm-2 align-items-center flex-column flex-lg-row text-center text-md-left">
                            <button type="button" class="btn btn-red ml-lg-auto" onclick="deleteConfirm(@discuss.Id)">Delete</button>
                            <a href="@Url.Action(nameof(DiscussController.Messages), NameUtils.ControllerName<DiscussController>(), new { id = discuss.Id })" class="btn btn-info ml-lg-2 text-white mt-md-2">Discuss</a>
                        </div>
                    </div>
                </div>
            }

            @await Component.InvokeAsync(nameof(Pagination), (Pagination)ViewBag.Pagination);
        }
    </div>
</div>

@section Scripts {
    <partial name="Index.DeleteConfirm" />
}