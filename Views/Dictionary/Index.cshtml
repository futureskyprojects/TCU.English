@{
    ViewData["Title"] = "Look up | Dictionary";

    IEnumerable<TestCategory> grammars = ViewBag.Grammars;
    Pagination gp = ViewBag.GrammarPagination;

    IEnumerable<Vocabulary> vocabularies = ViewBag.Vocabularies;
}
<div class="py-5">
    <div class="row">
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <div class="row align-items-center">
                        <h2 class="h6 text-uppercase my-auto">Grammar</h2>
                        <button type="button" data-toggle="modal" data-target="#Grammar_View" class="btn btn-primary ml-auto">Search</button>
                    </div>
                </div>
                <div class="card-body p-3">
                    @if (grammars != null && grammars.Count() > 0)
                    {
                        for (int i = 0; i < grammars.Count(); i++)
                        {
                            <div class="card mb-2 bg-hover-gradient-blue no-anchor-style">
                                <div class="card-body p-3">
                                    <div class="row align-items-center flex-row">
                                        <div class="col-12">
                                            <p class="mb-0 d-flex align-items-center font-weight-bold"><span>@Html.Raw(grammars.ElementAt(i).Name) <sup class="smaller text-gray font-weight-normal"></sup></span></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        @await Component.InvokeAsync(nameof(Pagination), gp)
                    }
                    else
                    {
                        <partial name="__EmptyAnimation" />
                    }
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-md-4">
                            <h6 class="text-uppercase">LOOK UP</h6>
                        </div>
                        <div class="col-md-8">
                            @using (Html.BeginForm(nameof(DictionaryController.Index), NameUtils.ControllerName<DictionaryController>(), FormMethod.Get, new { @class = "form-inline float-md-right" }))
                            {
                                <div class="input-group">
                                    <input id="inlineFormInputGroup" type="text" placeholder="Ex: blogger, click,..." class="form-control" name="lookup" value="@Html.Raw(ViewBag.LookUp)">
                                    <div class="input-group-append">
                                        <button type="submit" class="btn btn-primary">Look up</button>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @if (vocabularies != null && vocabularies.Count() > 0)
                    {
                        @for (int i = 0; i < vocabularies.Count(); i++)
                        {
                            <div class="card mb-3">
                                <div class="card-body">
                                    <div class="row align-items-center flex-row">
                                        <div class="col-11">
                                            <p class="mb-0 d-flex align-items-center font-weight-bold"><span><strong class="h5 mb-0"><sup class="smaller text-gray font-weight-normal">&harr;</sup></strong> @Html.Raw(vocabularies.ElementAt(i).Word)</span></p>
                                        </div>
                                        <div class="col-1">
                                            <button class="btn btn-sm btn-info">Open</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <partial name="__EmptyAnimation" />
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@* READING PART 1 DIALOG *@
<div id="modal-create-vocabulary"></div>
<div id="modal-update-vocabulary"></div>
@* END READING PART 1 DIALOG *@

@section Scripts {
    <script>
                                                                        //$("#modal-update-vocabulary").load(`Url.Action(nameof(DictionaryManagerController.VocabularyUpdate), NameUtils.ControllerName<DictionaryManagerController>())/${id}`);
    </script>
}
