@{
    ViewData["Title"] = "Look up | Dictionary";

    IEnumerable<TestCategory> grammars = ViewBag.Grammars;
    Pagination gp = ViewBag.GrammarPagination;

    IEnumerable<Vocabulary> vocabularies = ViewBag.Vocabularies;
}
<div class="py-5">
    <div class="row">
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <div class="align-items-center">
                        <h2 class="h6 text-uppercase">Grammar</h2>
                        @using (Html.BeginForm(nameof(DictionaryController.Index), NameUtils.ControllerName<DictionaryController>(), FormMethod.Get, new { @class = "form-inline float-md-right" }))
                        {
                            @Html.Hidden("lookup")
                            <div class="input-group">
                                <input id="inlineFormInputGroup" type="text" placeholder="Ex: Artical, Passive voice,..." class="form-control" name="grammarSearchKey" value="@Html.Raw(ViewBag.GrammarSearchKey)">
                                <div class="input-group-append">
                                    <button type="submit" class="btn btn-primary">Look up</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="card-body p-3">
                    @if (grammars != null && grammars.Count() > 0)
                    {
                        for (int i = 0; i < grammars.Count(); i++)
                        {
                            <div class="card mb-2 bg-hover-gradient-blue no-anchor-style cursor" onclick="loadGrammar(@grammars.ElementAt(i).Id)">
                                <div class="card-body p-3">
                                    <div class="row align-items-center flex-row">
                                        <div class="col-12">
                                            <p class="mb-0 d-flex align-items-center font-weight-bold"><span>@Html.Raw(grammars.ElementAt(i).Name) <sup class="smaller text-gray font-weight-normal"></sup></span></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        @await Component.InvokeAsync(nameof(Pagination), gp)
                    }
                    else
                    {
                        <partial name="__EmptyAnimation" />
                    }
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-md-4">
                            <h6 class="text-uppercase">LOOK UP VOCABULARY</h6>
                        </div>
                        <div class="col-md-8">
                            @using (Html.BeginForm(nameof(DictionaryController.Index), NameUtils.ControllerName<DictionaryController>(), FormMethod.Get, new { @class = "form-inline float-md-right" }))
                            {
                                @Html.Hidden("grammarSearchKey")
                                <div class="input-group">
                                    <input id="inlineFormInputGroup" type="text" placeholder="Ex: blogger, click,..." class="form-control" name="lookup" value="@Html.Raw(ViewBag.LookUp)">
                                    <div class="input-group-append">
                                        <button type="submit" class="btn btn-primary">Look up</button>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @if (vocabularies != null && vocabularies.Count() > 0)
                    {
                        @for (int i = 0; i < vocabularies.Count(); i++)
                        {
                            if (i > 0)
                            {
                                <hr />
                            }
                            <div>
                                <p class="d-inline-block"><span class="font-weight-bold text-info">@Html.Raw(vocabularies.ElementAt(i).Word)</span> (@Html.Raw(vocabularies.ElementAt(i).TypeOfWord)) @Html.Raw(vocabularies.ElementAt(i).Spelling)</p>
                                <p class="d-inline-block float-right">[@Html.Raw(vocabularies.ElementAt(i).Topic.Name)]</p>
                            </div>
                            <div>
                                <p>@Html.Raw(vocabularies.ElementAt(i).Meaning)</p>
                                <p style="text-decoration: underline;">Example:</p>
                                <p>@Html.Raw(vocabularies.ElementAt(i).Use)</p>
                            </div>
                        }
                    }
                    else
                    {
                        if (string.IsNullOrEmpty(ViewBag.LookUp))
                        {
                            <p class="text-center"><i>Please enter the word you are looking for in the search box above and press "Look up".</i></p>
                        }
                        else
                        {
                            <partial name="__EmptyAnimation" />
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@* Start Modal for grammar *@
<div class="modal fade" id="display-grammar">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <p class="modal-title" id="grammar"></p>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body" id="grammar-content">
                Modal body..
            </div>
            <!-- Modal footer -->
            <!--<div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>-->

        </div>
    </div>
</div>
@* End Modal for grammar *@

@section Scripts {
    <script>
        function loadGrammar(id) {
            $.ajax({
                url: `@Url.Action(nameof(TestCategoryController.GetGrammarViaAjax), NameUtils.ControllerName<TestCategoryController>())/${id}`,
                method: 'GET'
            }).then(function (res) {
                $("#grammar").html(res.name);
                if (res.content == null || res.content.length <= 0)
                    $("#grammar-content").html("<i class=\"text-danger\">Empty</i>");
                else
                    $("#grammar-content").html(res.content);

                $("#display-grammar").modal("show");
                console.log(res);
            }).catch(function () {
                    @Html.Raw(Notification.Error("Not found"))
                })
        }
    </script>
}
