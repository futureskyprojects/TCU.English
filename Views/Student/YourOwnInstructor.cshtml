@model IEnumerable<User>
@{
    ViewData["Title"] = "Your own instructors";
    string controllerName = NameUtils.ControllerName<StudentController>();

    string tableName = "Your own instructors";
    string tableDescription = $"List of First {Model.Count()} instructors who choose you to be the instructor";

    string searchKey = ViewBag.SearchKey;
}
<div class="card my-5">
    <div class="card-header">
        <div class="row">
            <div class="col-md-6">
                <h6 class="text-uppercase">@Html.Raw(tableName) @Html.Raw(string.IsNullOrEmpty(searchKey) ? "" : $"With key '{searchKey}'")</h6>
                <p class="text-gray mb-md-0">@Html.Raw(tableDescription)</p>
            </div>
            <div class="col-md-6">
                @using (Html.BeginForm(nameof(StudentController.YourOwnInstructor), controllerName, FormMethod.Get, new { @class = "form-inline float-md-right" }))
                {
                    <div class="form-group">
                        <label for="inlineFormInputGroup" class="sr-only">Keywords</label>
                        <input id="inlineFormInputGroup" type="text" placeholder="Your student name/username" class="mr-3 form-control" name="searchKey" value="@searchKey">
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Search</button>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (Model == null || Model.Count() <= 0)
        {
            <partial name="__EmptyAnimation" />
        }
        else
        {
            foreach (User user in Model)
            {
                <div href="#" class="message card px-5 py-3 mb-4 bg-hover-gradient-primary no-anchor-style">
                    <div class="row">
                        <div class="col-lg-6 d-flex align-items-center flex-column flex-lg-row text-center text-md-left">
                            <img src="@Html.Raw(user.Avatar)" alt="@Html.Raw($"{user.FirstName} {user.LastName}")" style="max-width: 3rem" class="rounded-circle mr-3 my-2 my-lg-0 top-avatar" onerror="this.onerror=null; this.src='/img/no_avatar.png'">
                            <h6 class="mb-0" style="font-family: Tahoma">@Html.Raw($"{user.FirstName} {user.LastName}")</h6>
                        </div>
                        <div class="col-lg-6 d-flex align-items-center flex-column flex-lg-row text-center text-md-left">
                            <a href="@Url.Action(nameof(DiscussController.CreateDiscuss), NameUtils.ControllerName<DiscussController>(), new {
                                    friendId = user.Id})" class="btn btn-violet float-lg-right ml-lg-auto text-white">Discuss</a>

                            <a href="@Url.Action(nameof(TestController.Index), NameUtils.ControllerName<TestController>(), new {
                                type = "ALL",
                                page = 1,
                                searchKey = "",
                                instructorId = user.Id})" class="btn btn-info float-lg-right ml-2 text-white">View tests submitted</a>
                        </div>
                    </div>
                </div>
            }
            @await Component.InvokeAsync(nameof(Pagination), (Pagination)ViewBag.Pagination);
        }
    </div>
</div>