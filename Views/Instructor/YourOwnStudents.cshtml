@model IEnumerable<User>
@{
    ViewData["Title"] = "Your own students";
    string controllerName = NameUtils.ControllerName<InstructorController>();

    string tableName = "Your own students";
    string tableDescription = "List of students who choose you to be the instructor";
}
<div class="card my-5">
    <div class="card-header">
        <div class="row">
            <div class="col-md-6">
                <h6 class="text-uppercase">@Html.Raw(tableName)</h6>
                <p class="text-gray mb-md-0">@Html.Raw(tableDescription)</p>
            </div>
            <div class="col-md-6">
                @using (Html.BeginForm(nameof(InstructorController.Index), controllerName, FormMethod.Get, new { @class = "form-inline float-md-right" }))
                {
                    <div class="form-group">
                        <label for="inlineFormInputGroup" class="sr-only">Keywords</label>
                        <input id="inlineFormInputGroup" type="text" placeholder="Keywords" class="mr-3 form-control" name="searchKey">
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Search</button>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (Model == null || Model.Count() <= 0)
        {
            <partial name="__EmptyAnimation" />
        }
        else
        {
            foreach (TCU.English.Models.User user in Model)
            {
                <div href="#" class="message card px-5 py-3 mb-4 bg-hover-gradient-primary no-anchor-style">
                    <div class="row">
                        <div class="col-lg-4 d-flex align-items-center flex-column flex-lg-row text-center text-md-left">
                            <img src="@Html.Raw(user.Avatar)" alt="@Html.Raw($"{user.FirstName} {user.LastName}")" style="max-width: 3rem" class="rounded-circle mr-3 my-2 my-lg-0 top-avatar" onerror="this.onerror=null; this.src='/img/no_avatar.png'">
                            <h6 class="mb-0" style="font-family: Tahoma">@Html.Raw($"{user.FirstName} {user.LastName}")</h6>
                        </div>
                        <div class="col-lg-4 d-flex align-items-center flex-column flex-lg-row text-center text-md-left">
                            @*<div class="bg-gray-100 roundy px-4 py-1 mr-0 mr-lg-3 mt-2 mt-lg-0 text-dark exclode float-lg-left">
                                    @user.DisplayFirstUserType()
                                </div>*@
                        </div>
                        <div class="col-lg-4 d-flex align-items-center flex-column flex-lg-row text-center text-md-left">
                            <a href="@Url.Action(nameof(InstructorController.YourOwnStudents), NameUtils.ControllerName<InstructorController>(), new { id = user.Id })" class="btn btn-info float-lg-right ml-lg-auto text-white">View Tests</a>
                            @*<button type="button" class="btn btn-red float-lg-right ml-2" onclick="deleteConfirm(@user.Id, '@Html.Raw($"{user.FirstName} {user.LastName}")')">Delete</button>*@
                        </div>
                    </div>
                </div>
            }
            @await Component.InvokeAsync(nameof(Pagination), (Pagination)ViewBag.Pagination);
        }
    </div>
</div>