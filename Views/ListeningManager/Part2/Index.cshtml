@model IEnumerable<TestCategory>
@{
    ViewData["Title"] = "Listening Part 2 Manager";
}

<div class="py-5">
    <div class="card">
        <div class="card-header">
            <div class="row align-items-center">
                <h2 class="h6 text-uppercase my-auto">Listening Part 2's Paragraphs</h2>
                <button type="button" onclick="window.location.href='@Url.Action(nameof(ListeningManagerController.Part2Create), NameUtils.ControllerName<ListeningManagerController>())'" class="btn btn-primary ml-auto">Add</button>
            </div>
        </div>
        <div class="card-body p-3">
            @if (Model != null && Model.Count() > 0)
            {
                for (int i = 0; i < Model.Count(); i++)
                {
                    <div class="card mb-3 bg-hover-gradient-blue no-anchor-style">
                        <div class="card-body">
                            <div class="align-items-center flex-row">
                                <div onclick="window.location.href='@Url.Action(nameof(ListeningManagerController.Part2), NameUtils.ControllerName<ListeningManagerController>(), new { category = Model.ElementAt(i).Id })'" class="float-left">
                                    <p class="mb-0 d-flex align-items-center font-weight-bold"><span>@(i + 1). @Html.Raw(Model.ElementAt(i).Name.TrimMax(100)) <sup class="smaller text-gray font-weight-normal">(@Html.Raw(Model.ElementAt(i).ListeningBaseQuestions.Count))</sup></span></p>
                                    <small class="text-muted">@Html.Raw(Model.ElementAt(i).Description.TrimMax(80))</small>
                                </div>
                                <span class="float-right">
                                    <button type="button" class="btn btn-warning mx-2" onclick="window.location.href='@Url.Action(nameof(ListeningManagerController.Part2Update), NameUtils.ControllerName<ListeningManagerController>(), new { id = Model.ElementAt(i).Id })'">Edit</button>
                                    <button type="button" class="btn btn-danger" onclick="releteCategory(@Model.ElementAt(i).Id)">Delete</button>
                                    @*                                    <button type="button" class="btn btn-info">View</button>*@
                                </span>
                            </div>
                        </div>
                    </div>
                }
                <div class="pt-3">
                    @await Component.InvokeAsync(nameof(Pagination), (Pagination)ViewBag.CategoryPagination)
                </div>
            }
            else
            {
                <partial name="__EmptyAnimation" />
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
    function releteCategory(id) {
            swal({
                title: "Are you sure?",
                text: `Once deleted, this action cannot be undone.`,
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        fetch(`@Url.Action(nameof(ListeningManagerController.Part2DeleteAjax), NameUtils.ControllerName<ListeningManagerController>())/${id}`, {
                            method: 'DELETE'
                        }).then(function (response) {
                            response.json().then(function (data) {
                                if (data.success) {
                                    swal(`OK! Listening test name has been deleted.`, {
                                        icon: "success",
                                    });
                                    setTimeout(function () { location.reload(); }, 100);
                                } else {
                                    swal(`${data.responseText}`, {
                                        icon: "error",
                                    });
                                }
                            }).catch(function (error) {
                                console.log(error);
                                swal(`Sorry! Listening test name has not been deleted.`, {
                                    icon: "error",
                                });
                            });
                        }).catch(function (error) {
                            console.log(error);
                            swal(`Sorry! Listening test name has not been deleted.`, {
                                icon: "error",
                            });
                        })
                    } else {
                        swal(`Listening`, "safe!");
                    }
                });
    }
    </script>
}